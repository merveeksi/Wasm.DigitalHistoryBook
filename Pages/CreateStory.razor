@page "/createStory"
@using OpenAI.Interfaces
@using OpenAI.ObjectModels
@using OpenAI.ObjectModels.RequestModels
@using Wasm.DigitalHistoryBook.Enums
@using Wasm.DigitalHistoryBook.Interfaces
@inject IStoryService StoryService
@inject IOpenAIService OpenAiService
@inject NavigationManager Navigation
@using OpenAI.Managers

<PageTitle>Yeni Hikaye Oluştur</PageTitle>

<div class="container mx-auto p-4">
    <div class="card bg-base-200 shadow-xl mb-8 transition-transform transform hover:scale-105">
        <div class="card-body">
            <h2 class="card-title mb-4 mt-8">Kendi hikayeni oluşturmak ister misin?</h2>
            <textarea @bind=@prompt class="textarea textarea-bordered w-full mb-4" placeholder="Açıklamayı buraya yazınız..." style="height: 200px;"></textarea>

            <textarea @bind=@title class="textarea textarea-bordered w-full mb-4" placeholder="Hikaye Başlığı" style="height: 50px;"></textarea>
            
            <!-- Tür Seçin -->
            <h3 class="font-bold mb-2">Tür Seçin</h3>
            <select @bind="genre" class="select select-bordered w-full mb-4">
                <option value="">Seçiniz</option>
                @foreach (var g in Enum.GetValues(typeof(Genre)).Cast<Genre>())
                {
                    <option value="@g">@g.ToString()</option>
                }
            </select>

            <!-- Yaş Grubu Seçin -->
            <h3 class="font-bold mb-2">Yaş Grubu Seçin</h3>
            <select @bind="targetAge" class="select select-bordered w-full mb-4">
                <option value="">Seçiniz</option>
                @foreach (var age in Enum.GetValues(typeof(AgeGroup)).Cast<AgeGroup>())
                {
                    <option value="@age">@age.ToString()</option>
                }
            </select>

            <!-- İllüstrasyon Stili Seçin -->
            <h3 class="font-bold mb-2">İllüstrasyon Stili Seçin</h3>
            <select @bind="illustrationStyle" class="select select-bordered w-full mb-4">
                <option value="">Seçiniz</option>
                @foreach (var style in Enum.GetValues(typeof(IllustrationStyle)).Cast<IllustrationStyle>())
                {
                    <option value="@style">@style.ToString()</option>
                }
            </select>

            <div class="card-actions justify-end">
                <button class="btn btn-primary btn-lg" @onclick="GenerateStoryAsync">Hikaye Oluştur</button>
            </div>
           
            @if (!string.IsNullOrEmpty(generatedStory))
            {
                <h4 class="text-2xl font-semibold mt-4">Oluşturulan Hikaye:</h4>
                <p>@generatedStory</p>
                <button class="btn btn-secondary mt-4" @onclick="NavigateToStoryDetails">Hikaye Detaylarına Git</button>
            }
        </div>

        @if (isLoading)
        {
            <div class="flex justify-center items-center h-64">
                <span class="loading loading-spinner loading-lg"></span>
            </div>
        }
    </div>
</div>

@code
{
    private string title;
    private Genre genre;
    private AgeGroup targetAge;
    private IllustrationStyle illustrationStyle;
    private string prompt = string.Empty;
    private string generatedStory = string.Empty;
    private bool isLoading = false;
    private int storyId;

    private async Task GenerateStoryAsync()
    {
        isLoading = true;
        generatedStory = string.Empty;

        try
        {
            var completionResult = await OpenAiService.ChatCompletion.CreateCompletion(new ChatCompletionCreateRequest
            {
                Messages = new List<ChatMessage>
                {
                    ChatMessage.FromSystem("Sen çocukların yaş ve ilgi alanlarına göre hikaye oluşturabilirsin."),
                    ChatMessage.FromUser(prompt),
                },
                Model = OpenAI.ObjectModels.Models.Gpt_4o,
                MaxTokens = 4096,
            });

            if (completionResult.Successful)
            {
                generatedStory = completionResult.Choices.First().Message.Content;
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e.ToString());
            throw;
        }
        finally
        {
            isLoading = false;
        }
    }

    private void NavigateToStoryDetails()
    {
        // Hikaye başlığını ve içeriğini StoryDetails sayfasına geçirin
        Navigation.NavigateTo($"/storyDetails/{storyId}");
    }
}